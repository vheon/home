---
# XXX(andrea): should we use XDG_CONFIG_HOME instead of hardcoding ~/.config?
# XXX(andrea): what if the XDG_CONFIG_HOME variable is not set? does ansible see it?
# XXX(andrea): these considerations are the same as for fish
- name: Ensure ~/.config directory exists
  file:
    path: "~/.config"
    state: directory

- name: Link configuration in XDG_CONFIG_HOME
  file:
    src: "{{ role_path }}/files/nvim"
    path: "~/.config/nvim"
    state: link

# XXX(andrea): should we use XDG_DATA_HOME instead of hardcoding ~/.local/share?
- name: Clone package manager packer.nvim
  git:
    dest: ~/.local/share/nvim/site/pack/packer/opt/packer.nvim
    repo: https://github.com/wbthomason/packer.nvim

- name: Check if we are doing the setup for the first time.
  stat:
    path: ~/.local/share/nvim/site/pack/packer/start/
  register: packer_start_dir

# XXX(andrea): maybe we should set the environment for the whole playbook and be done with it. We could put also XDG directories as well.
- name: Install all plugins
  shell: >
    nvim
    --headless
    -u NONE
    -c "autocmd User PackerComplete qa"
    -c "lua require'plugins'.install()"
  environment:
    PATH: "{{ brew_bin_location }}:{{ ansible_env.PATH }}"
  when: not packer_start_dir.stat.exists

- name: Ensure ~/code directory exists
  file:
    path: "~/code"
    state: directory

- name: Clone ycm.nvim
  git:
    dest: ~/code/ycm.nvim
    repo: git@github.com:vheon/ycm.nvim.git
    update: no # XXX(andrea): this is actually wrong! Fix the "dirty" state of the project so we can also update a machine!
  register: git_ycm_nvim

- name: Install local plugins
  shell: >
    nvim
    --headless
    -u NONE
    -c "autocmd User PackerComplete qa"
    -c "lua require'plugins'.install()"
  environment:
    PATH: "{{ brew_bin_location }}:{{ ansible_env.PATH }}"
  when: git_ycm_nvim.before == "null"

- name: Update everything and Compile
  shell: >
    nvim
    --headless
    -u NONE # XXX(andrea): double check this!
    -c "autocmd User PackerCompileDone qa"
    -c "autocmd User PackerComplete lua require'plugins'.compile()"
    -c "lua require'plugins'.sync()"
  environment:
    PATH: "{{ brew_bin_location }}:{{ ansible_env.PATH }}"
